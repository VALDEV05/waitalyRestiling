{"laborator_custom_css":"\/* Background color for all pages *\/\r\nbody{\r\n\tbackground-color: #eee !important;\r\n}\r\n\r\n\/* Background color for Cart and Checkout pages *\/\r\nbody.woocommerce-cart, body.woocommerce-checkout {\r\n    background-color: #fff !important;\r\n}\r\n\r\n\/* Background color for Contact page *\/\r\n.page-template-contact-php {\r\n\tbackground: #FFF !important;\r\n}\r\n\r\n\/*Cart icon color*\/\r\nheader.site-header .header-widgets .cart-counter svg {\r\n\tfill: #fff;\r\n}\r\n\r\nheader.mobile-menu .mobile-logo>.cart-info .cart-counter .cart-icon svg {\r\n    fill: #fff;\r\n}\r\n\r\nheader.mobile-menu .mobile-logo .mobile-toggles .toggle-menu {\r\n    fill: #fff;\r\n}\r\n\r\nheader.site-header ul.nav li a, header.site-header div.nav>ul li a {\r\n\tfont-style: italic !important;\r\n\tfont-weight:400 !important;\r\n}\r\n\r\nheader.site-header {\r\n\tbox-shadow: none !important;\r\n\tbackground: #154a87 url(\"https:\/\/themes.laborator.co\/aurum\/tech\/wp-content\/uploads\/2014\/11\/map.png\") no-repeat 5% 50% !important;\r\n}\r\n\r\nheader.site-header ul.nav li a, header.site-header div.nav>ul li a {\r\n\tcolor: #FFF !important;\r\n}\r\n\r\n.header-links {\r\n\tborder:none !important;\r\n\tpadding: 30px 0 !important;\r\n}\r\n\r\nheader.site-header ul.nav>li>a:after, header.site-header div.nav>ul>li>a:after {\r\n\tbackground: #FFF !important;\r\n}\r\n\r\nheader.site-header .full-menu {\r\n\tborder: none !important;\r\n}\r\n\r\nheader.site-header ul.nav>li:hover>a, header.site-header div.nav>ul>li:hover>a, .nav>li>a:hover, .nav>li>a:focus {\r\n\tbackground: #ff9600 !important;\r\n}\r\n\r\nheader.mobile-menu .mobile-logo {\r\n\tbackground: #154a87 url(\"https:\/\/themes.laborator.co\/aurum\/tech\/wp-content\/uploads\/2014\/11\/map.png\") no-repeat 5% 50% !important;\r\n}\r\n\r\n\/*Submenu background color*\/\r\nheader.site-header div.nav>ul li ul, header.site-header ul.nav li ul {\r\n    background: #154a87;\r\n}\r\n\r\n.shop .container {\r\n\tpadding: 15px 60px !important;\r\n\tbackground: #FFF !important;\r\n}\r\n\r\n@media screen and (max-width: 768px) {\r\n\t.shop .container {\r\n    \tpadding: 15px 15px !important;\r\n\t}\r\n}\r\n\r\n.woocommerce .products .product .item-info .price span {\r\n\tfont-weight: 600 !important;\r\n\tfont-style: italic !important;\r\n\tcolor: #ff9600 !important;\r\n\tfont-size: 18px;\r\n}\r\n\r\n.woocommerce .onsale {\r\n\tbackground: #ff9600 !important;\r\n\tfont-style: italic;\r\n}\r\n\r\n\/* Footer background color *\/\r\n.site-footer {\r\n\tbackground: #fff;\r\n}\r\n\r\nnav.nav-growpop a:hover .icon-wrap {\r\n\tbackground-color: #154a87 !important;\r\n\tborder-color: #154a87 !important;\r\n}\r\n\r\nheader.mobile-menu .mobile-logo {\r\n\tborder: none !important;\r\n}\r\n\r\nfooter.site-footer.inverted .footer-widgets .sidebar ul li a {\r\n\tcolor: #8DA5C0 !important;\r\n}\r\n\r\nfooter.site-footer.inverted {\r\n\tcolor: #FFF !important;\r\n\tbackground: #154a87 !important;\r\n} \r\n\r\nfooter.site-footer.inverted .social-networks li a {\r\n\tbackground: #163E6C !important;\r\n}\r\n\r\nfooter.site-footer.inverted .footer-bottom {\r\n\tborder-color: #2F639E !important;\r\n}\r\n\r\n.page-container .wpb_content_element.lab_wpb_products_carousel .owl-buttons .owl-prev, .page-container .wpb_content_element.lab_wpb_products_carousel .owl-buttons .owl-next {\r\n\tbackground-color: #ff9700 !important;\r\n}\r\n\r\n.contact-page .contact-information .social-networks li a i {\r\n    color: #888 !important;\r\n}\r\n\r\n.select2-container--default .select2-selection--single {\r\n    background-color: #eee;\r\n}\r\n\r\n\/* New *\/\r\n.products .product:before {\r\n    content: '';\r\n    display: block;\r\n    left: 15px;\r\n    right: 15px;\r\n    top: 0;\r\n    bottom: 0;\r\n    background: #fff;\r\n    position: absolute;\r\n    -webkit-box-shadow: 0px 1px 1px rgba(0,0,0,0.05);\r\n\tbox-shadow: 0px 1px 1px rgba(0,0,0,0.05);\r\n    -webkit-transition: all 250ms ease-in-out;\r\n    -o-transition: all 250ms ease-in-out;\r\n    transition: all 250ms ease-in-out;\r\n}\r\n\r\n.products .product:before:hover {\r\n\tbox-shadow: 0px 2px 6px rgba(0,0,0,0.09);\r\n}\r\n\r\n.products .product .item-image,\r\n.products .product .item-info {\r\n    margin-left: 15px;\r\n    margin-right: 15px;\r\n}\r\n\r\n.products .product .item-image {\r\n    width: auto !important;\r\n}\r\n\r\n.products .product .item-info {\r\n    margin-bottom: 15px;\r\n}\r\n\r\n.products .product:hover:before {\r\n\t-webkit-box-shadow: 0px 2px 6px rgba(0,0,0,0.09);\r\n\tbox-shadow: 0px 2px 6px rgba(0,0,0,0.09)\r\n}\r\n\r\n.image-placeholder {\r\n    background: #fff;\r\n}\r\n\r\n\/*\r\n.woocommerce .products {\r\n\tdisplay: -webkit-box;\r\n\tdisplay: -ms-flexbox;\r\n\tdisplay: flex;\r\n\t-ms-flex-wrap: wrap;\r\n\tflex-wrap: nowrap;\r\n}\r\n*\/\r\n\r\n.woocommerce .products .product {\r\n    margin-bottom: 30px;\r\n}\r\n\r\n.woocommerce .products .product .item-image {\r\n    margin-top: 20px;\r\n}\r\n\r\n.woocommerce div.single-product--product-details {\r\n    width: 100%;\r\n    background: #FFF;\r\n\tpadding: 40px 35px 0px 35px;\r\n}\r\n\r\n.woocommerce div.single-product--product-details .products .product:before {\r\n    -webkit-box-shadow: 0px 0px 0px 1px rgba(0,0,0,0.05);\r\n\tbox-shadow: 0px 0px 0px 1px rgba(0,0,0,0.05);\r\n}\r\n\r\n.single-product .page-heading {\r\n\tmargin-top: 0px !important;\r\n\tmargin-bottom: 0px !important;\r\n}\r\n\r\n.related.products {\r\n    display: block;\r\n}","laborator_custom_css_lg":"","laborator_custom_css_md":"","laborator_custom_css_sm":"","laborator_custom_css_xs":"","laborator_custom_css_less":"@my-var: #ccc;\n@my-other-var: #fff;\n\n.any-container {\n\t.nested-container {\n\t\tcolor: @my-var;\n\t}\n}","laborator_custom_css_sass":"$color: #abc;\n\ndiv.example-el {\n\tcolor: lighten($color, 20%);\n}"}